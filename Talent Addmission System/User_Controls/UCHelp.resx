<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtbHelp.Text" xml:space="preserve">
    <value>
	Software Details:
	Software Name: Talent ICS Admission System
	Version: 1.0.2
	Date Created: 28/March/2022
	Software Designed By: Shukrullah Askari
	_____________________________________________________________________________________

	How to use the software?
	This software is a management software mainly designed for 
	computer labs and all records will be saved inside an access database outside the application.
	You need to setup this software first in order to use it.
	_____________________________________________________________________________________

	How to Setup?
	1- Create an access database inside your computer
	2- Create an access table inside your database and give it a valid name without spaces
	     between words!!!, for students
	3- Create 15 columns inside access table with the following name, data type and order:

	 Column Name           Datatype
	 -------------------------------------------------------
	 ID                                AutoNumber  (Primary_Key)
	 studentName             Short Text
	 fatherName                Short Text
	 studentID                    Short Text
	 admissionDate           Short Text
	 program                      Short Text
	 duration                       Short Text
	 timing                          Short Text
	 amount                       Short Text
	 paid                             Short Text
	 phoneNumber             Short Text
	 cashier                        Short Text
	 notePrice                    Short Text
	 studentAddress          Long Text
	 picture                        Long Text

	4- Create another table inside the same access database you have created
	      for calculating teachers salary and give it a valid name like, ''payments_table'' 
	      without spaces between words!!!
	5- Create 13 columns inside payments table with the following name, data type and order:

	 Column Name           Datatype
	 -------------------------------------------------------
	 rowID                                AutoNumber  (Primary_Key)
	 instructorID                      Short Text
	 instructorName                Short Text
	 lastName                          Short Text
	 designation                       Short Text
	 paymentDate                    Short Text
	 totalAmountToReduct      Short Text
	 percentage                        Short Text
	 allowances                         Short Text
	 deductions                         Short Text
	 netSalary                            Short Text
	 paidAmount                       Short Text
	 unpaidAmount                   Short Text

	6- Open the software, go to settings -&gt; click change in front of change data source text box 
	     -&gt; find your access database you have created, select it and click done 
	     -&gt; click submit to save changes.

	7- Write your access table name inside the "students table name text box" in settings,
	     then click submit to save changes

	8- Write your payments table name inside the "payments table name text box" in settings,
	     then click submit to save changes
	_____________________________________________________________________________________

	How to Setup more?
	-  By default records images will be saved inside a folder named 
	    "Talent Addmission System\RECORDS\Students images" inside any available drives.
	-  You can change this location by going to settings -&gt; click change in font of images location 
	    -&gt;  select a folder and click ok -&gt; then click submit to apply changes.
	
	- You can add and remove programs/packages in settings
	_____________________________________________________________________________________

	Note 1: give meaningful names for your access tables and separate words using underscores not spaces!!!
	Note 2: changing contact number and course address will effect 
	    only when you print the students details.
	Note 3: You can set a password for access database but it should be Talent.
	Note 4: Default password for software is 12345 and you can change it via settings.

	Warning: Do not forget the software password because there is not way to break it!!!







	.</value>
  </data>
</root>